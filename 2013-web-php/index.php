<!DOCTYPE html>
<html lang="en">
<head>
	<?php require_once('include/head-include.php'); ?>
	<title>OWASP Top 10 in php | The darkw3b</title>
</head>
<body>
	<!-- wrapper -->
	<div class="wrapper">
		<?php require_once('include/header.php'); ?>
		<!-- shell -->
		<div class="shell">
			<!-- main -->
			<div class="main">
				<section class="content">
					<h2>Learn OWASP Top 10 2013 by php</h2>
					<p>Learning Security made easy. OWASP Top 10s are delibarately coded to insecure. Come, Hack &amp; learn!!</p>
					<br />
					<ul>
						<li><b>A1: Injection</b>
							<ul>
								<li>Command Injection: <a href="<?php echo $HOME;?>chapter/a1/command-injection-delete-file.php">Delete File</a></li>
								<li>Code Injection: <a href="<?php echo $HOME;?>chapter/a1/code-injection-comment-file.php">File write</a>
								</li>								
								<li>SQL Injection
									<ul>
										<li>Error Based
											<p><a href="<?php echo $HOME;?>chapter/a1/bypass-login.php">Bypass Login</a> | <a href="<? echo $HOME;?>chapter/a1/int-where.php">Integer in where clause</a> | <a href="<? echo $HOME;?>chapter/a1/string-where-single-quote.php">String with single quote in where clause</a></p>
											<p><a href="<?php echo $HOME;?>chapter/a1/string-where-like-double-quote.php">String with LIKE &amp; double quote in where</a> | <a href="<? echo $HOME;?>chapter/a1/update-query.php">Update query</a></p>
										</li>
										<li>Blind</li>
										<li>Web Service
											<p><a href="<?php echo $HOME;?>chapter/a1/user-search.php">User ID Search - JSON WS</a></p>
										</li>
									</ul>
								</li>
								<li>XML Injection
									<ul>
										<li>XXE - XML External Entity Injection
											<ul>
												<li><a href="<?php echo $HOME;?>chapter/a1/simple-xxe.php">Simple XXE</a> - Look at the source to understand how it works. simplexml_load_string and entity should be enabled in your server set up in order this to work.</li>
											</ul>
										</li>
									</ul>
								</li>
							</ul>
						</li>
						<li><b>A2: Broken Authentication &amp; Session Management</b>
							<ul>
								<li><a href="<?php echo $HOME; ?>chapter/a2/insecure-signup.php">Insecure Signup</a></li>
								<li><a href="<?php echo $HOME; ?>chapter/a2/login-weak-cookie.php">Weak Cookie</a></li>
								<li><a href="<?php echo $HOME; ?>chapter/a2/insecure-logout.php">Insecure Logout</a></li>
							</ul>
						</li>
						<li><b>A3: Cross-Site Scripting (XSS)</b>
							<ul>
								<li>Reflected
									<ul>
										<p><a href="<?php echo $HOME;?>chapter/a3/reflected-direct.php">Direct</a> | <a href="<?php echo $HOME;?>chapter/a3/reflected-textbox.php">Textbox</a></p>
									</ul>
								</li>
								<li>Stored</li>
								<li>DOM based
									<ul>
										<li><a href="<?php echo $HOME;?>chapter/a3/dom-cookie.php">Cookie based</a></li>
									</ul>
								</li>
							</ul>
						</li>
						<li><b>A4: Insecure Direct Object Reference</b></li>
						<li><b>A5: Security Misconfiguration</b></li>
						<li><b>A6: Sensitive Data Exposure</b></li>
						<li><b>A7: Missing Function Level Access Control</b></li>
						<li><b>A8: Cross-Site Request Forgery (CSRF)</b>
                                <ul>
                                    <li><a href="<?php echo $HOME;?>chapter/a8/add-user.php">Add User</a></li>
                                </ul>
                        </li>
						<li><b>A9: Using Components with Known Vulnerabilities</b></li>
						<li><b>A10: Unvalidated Redirects and Forwards</b>
							<ul>
								<li><a href="<?php echo $HOME;?>chapter/a10/open-redirect.php">Open Redirect</a></li>
							</ul>
						</li>
					</ul>
				</section>
			</div>
			<!-- end of main -->
		</div>
		<!-- end of shell -->	
		<?php require_once('include/footer.php'); ?>
	</div>
	<!-- end of wrapper -->
</body>
</html>