<?php
	if(isset($_GET['file_name'])) {
		$is_executed = true;
		$file = $_GET['file_name'];
		if(false === system("rm ".$file)) /* system() returns the last line of the command output on 								    * success, and FALSE on failure. */
			$is_executed = false;
	}
?>
<!DOCTYPE html>
<html lang="en">
<head>
	<?php require_once('../../include/head-include.php'); ?>
	<title>Delete File Command Injection | Learn by Exploit</title>
</head>
<body>
	<!-- wrapper -->
	<div class="wrapper">
		<?php require_once('../../include/header.php'); ?>
		<!-- shell -->
		<div class="shell">
			<!-- main -->
			<div class="main">
				<section class="content">
					<h3>Delete File</h3>
					<p>Enter the name of file to be deleted.</p>
					
					<h3>Challenge</h3>
					<p>Try to inject arbitrary command. Probably create a folder using mkdir command.</p>
					
					<?php
						if(true === $is_executed)
							echo "<b>The command executed succesfully.</b>";
					?>
					<form method="get">
						<table>
							<tr>
								<td>Name of the file to be deleted: </td>
								<td><input type="text" name="file_name" value="test-file-1.txt" /></td>
							</tr>
							<tr>
								<td colspan="2">
									<input type="submit" />
								</td>
							</tr>
						</table>
					</form>
					<br />
					<h4>Current directory txt files are </h4>
					<i>
					<?php
						$files = scandir(getcwd());
						foreach ($files as $key => $file) {
							if(0 < strpos($file, '.txt'))
								echo $file.'<br />';
						}
					?>
					</i>
					<br />
					<h4>Note:</h4>
					<p>Be cautious about the project files. If you mess up, this application may not work as expected. If you did so, please reset and set up project from the github again.</p>
					<hr />
					<h3>Background</h3>
					<p>The page accepts a file name and executes <i>rm</i> command at OS level. The code looks something like - </p>
					<pre>
$file = $_GET['file_name'];
system("rm $file");
					</pre>
					<h3>Solution</h3>
					<p>1. Create new file: <i>test-file-1.txt; echo "Another file" > 1.txt</i></p>
					<p>2. List files: <i>test-file-2.txt; ls</i></p>
					<p>3. Open sensitive file like /etc/passwd (On Linux): <i>test-file-3.txt; cat /etc/passwd</i></p>

				</section>
			</div>
			<!-- end of main -->
		</div>
		<!-- end of shell -->	
		<?php require_once('../../include/footer.php'); ?>
	</div>
	<!-- end of wrapper -->
</body>
</html>